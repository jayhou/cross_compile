name: Test cross_compile
on:
  pull_request:
  push:
    branches:
      - master
  schedule:
    # Run every hour. This helps detect flakiness,
    # and broken external dependencies.
    - cron:  '0 * * * *'

jobs:
  build_and_test_ubuntu:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
          python-version: [3.5, 3.6, 3.7]
    container:
      image: ubuntu:bionic
      options: -v /var/run/docker.sock:/var/run/docker.sock
    steps:
    - name: Checkout sources
      uses: actions/checkout@v2
    - uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
        architecture: x64
    - name: Install dependencies
      run: apt-get update && apt-get install -y qemu-user-static python-pip python3-pip git
    - name: Install Tox for testing
      run: pip3 install tox
    - name: Run tests
      run: tox -e py
    - uses: codecov/codecov-action@v1
      # Prevent being rate limited by only reporting coverage from the Ubuntu
      # build.
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: coverage.xml
        flags: unittests
        name: codecov-umbrella
        yml: ./codecov.yml
    # Upload the package to the PyPI test repository.
    # This will silently fail if a package with this version number already
    # exists.
    - uses: ros-tooling/action-pypi@0.0.2
      # As the package is platform-independent, only trigger this step on Linux
      # and only on push.
      # This action should never happen on pull-request, as it would lead us
      # to upload the package in its initial state, before review.
      # The final state of the pull request would then never be uploaded, as
      # we cannot overwrite packages.
      if: github.event_name == 'push'
      with:
        username: ${{ secrets.PYPI_USERNAME }}
        password: ${{ secrets.PYPI_PASSWORD }}
        repository-url: https://test.pypi.org/legacy/

  build_and_test_macos:
    runs-on: macOS-latest
    strategy:
      fail-fast: false
      matrix:
          python-version: [3.5, 3.6, 3.7]
    steps:
    - name: Checkout sources
      uses: actions/checkout@v2
    - uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
        architecture: x64
    - name: Install Tox for testing
      run: pip install tox
    - name: Run tests
      run: tox -e py
